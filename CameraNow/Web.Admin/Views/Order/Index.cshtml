@model IEnumerable<Datas.ViewModels.Order.OrderViewModel>
@inject Web.Admin.Resources.LocalizationService locService
@using Models.Enums
@{
    ViewData["Title"] = "Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Group orders by date
    var ordersByDate = Model?
        .OrderByDescending(o => o.Order_Date)
        .GroupBy(o => o.Order_Date.Date)
        .OrderByDescending(g => g.Key);
}

@section Styles {
    <style>
        .custom-color {
            color: #ee4d2d;
            line-height: 24px;
            text-align: right;
            text-transform: uppercase;
            white-space: nowrap;
        }

        p {
            margin-bottom: 5px;
        }

        a {
            color: #333;
            text-decoration: none;
        }

        .order-card {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 16px;
            transition: box-shadow 0.3s ease;
        }

            .order-card:hover {
                box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            }

        .order-header {
            background-color: #f8f9fa;
            padding: 12px 16px;
            border-bottom: 1px solid #e0e0e0;
            border-radius: 8px 8px 0 0;
        }

        .order-body {
            padding: 16px;
        }

        .order-item {
            display: flex;
            padding: 12px 0;
            border-bottom: 1px solid #f0f0f0;
        }

            .order-item:last-child {
                border-bottom: none;
            }

        .order-item-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 16px;
        }

        .date-header {
            font-size: 1.1rem;
            font-weight: 600;
            color: #444;
            margin: 24px 0 12px 0;
            background: #befbff;
            padding-bottom: 8px;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
            padding: 10px 10px;
            border-radius: 5px;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status-processing {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-confirmed {
            background-color: #d1ecf1;
            color: #0c5460;
        }

        .status-shipping {
            background-color: #cce5ff;
            color: #004085;
        }

        .status-delivered {
            background-color: #d4edda;
            color: #155724;
        }

        .status-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .total-amount {
            font-size: 1.1rem;
            font-weight: 600;
        }
    </style>
}

<h1>@locService.GetLocalize("Orders")</h1>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa-solid fa-house"></i></a></li>
        <li class="breadcrumb-item active" aria-current="page">@locService.GetLocalize("Orders")</li>
    </ol>
</nav>

<div class="card shadow">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary d-flex justify-content-between align-items-center">
            <span>@locService.GetLocalize("Orders") (@ViewBag.TotalCount)</span>
            <div class="">
                @* <a asp-action="Create" title="Create new" type="button" id="create_btn" class="btn text-primary">
                <i class="fa-light fa-plus"></i>
                </a> *@

                @* <button id="btn_del_multi" title="Delete" class="btn text-danger">
                <i class="fa-regular fa-trash"></i>
                </button> *@
            </div>
        </h6>
    </div>

    <div class="card-body">
        @using (Html.BeginForm("Index", "Orders", FormMethod.Get, new { @class = "mb-3", @id = "frm_search" }))
        {
            <div class="input-group">
                <input type="search" id="search_input" name="filter"
                       value="@ViewData["Current_Filter"]" placeholder="Search"
                       class="form-control">
                <button type="submit" id="btn_search" class="btn btn-primary">
                    <i class="fa-regular fa-magnifying-glass"></i>
                </button>
            </div>
        }

        <div class="mt-3">
            @if (Model == null || Model.Count() == 0)
            {
                <p class="text-center mt-5">Không có đơn đặt hàng nào!</p>
                <hr />
            }
            else
            {
                @foreach (var dateGroup in ordersByDate)
                {
                    <h5 class="date-header">
                        @dateGroup.Key.ToString("dd/MM/yyyy")
                        <span class="badge bg-secondary ms-2">@dateGroup.Count() đơn</span>
                    </h5>

                    @foreach (var order in dateGroup)
                    {
                        <div class="order-card mb-4">
                            <div class="order-header d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="fw-bold mb-1">@(order.FullName ?? "Unknow")</p>
                                    <p class="text-muted small mb-0">Mã đơn hàng: #@order.OrderNo</p>
                                </div>

                                <div>
                                    @{
                                        var statusClass = "";
                                        switch (order.Status)
                                        {
                                            case OrderStatusEnum.DangXuLy:
                                                statusClass = "status-processing";
                                                break;
                                            case OrderStatusEnum.XacNhanDonHang:
                                                statusClass = "status-confirmed";
                                                break;
                                            case OrderStatusEnum.DangGiaoHang:
                                                statusClass = "status-shipping";
                                                break;
                                            case OrderStatusEnum.DaGiaoHang:
                                                statusClass = "status-delivered";
                                                break;
                                            case OrderStatusEnum.DaHuy:
                                                statusClass = "status-cancelled";
                                                break;
                                        }
                                    }
                                    <span class="status-badge @statusClass">@locService.GetLocalize(order.Status.ToString())</span>
                                </div>
                            </div>

                            <div class="order-body">
                                <a asp-action="Details" asp-route-orderId="@order.ID" asp-route-userId="@order.UserId">
                                    @foreach (var order_item in order.OrderDetails)
                                    {
                                        <div class="order-item">
                                            <img src="@order_item.Product_Image" alt="@order_item.Product_Name" class="order-item-img" />
                                            <div class="flex-grow-1">
                                                <p class="fw-semibold mb-1">@order_item.Product_Name</p>
                                                <p class="text-muted small mb-1">Số lượng: x @order_item.Quantity</p>
                                                <p class="custom-color mb-0">@string.Format("{0:0,0 đ}", order_item.Product_Price)</p>
                                            </div>
                                        </div>
                                    }
                                </a>

                                <div class="d-flex justify-content-between align-items-center mt-3 pt-2 border-top">
                                    <div class="total-amount">
                                        Tổng tiền: <span class="custom-color">@string.Format("{0:0,0 đ}", order.Total_Amount)</span>
                                    </div>

                                    <div class="d-flex">
                                        @switch (order.Status)
                                        {
                                            case OrderStatusEnum.DangXuLy:
                                                <button data-orderId="@order.ID" data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.XacNhanDonHang"
                                                        class="btn btn-success btn-sm btnConfirmOrder me-2">
                                                    Xác nhận đơn
                                                </button>
                                                <button data-orderId="@order.ID" data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.DaHuy"
                                                        class="btn btn-outline-danger btn-sm btnCancelOrder">
                                                    Hủy đơn
                                                </button>
                                                break;
                                            case OrderStatusEnum.XacNhanDonHang:
                                                <button data-orderId="@order.ID"
                                                        data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.DangGiaoHang"
                                                        class="btn btn-primary btn-sm btnShippingOrder me-2">
                                                    Giao hàng
                                                </button>
                                                <button data-orderId="@order.ID" data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.DaHuy"
                                                        class="btn btn-outline-danger btn-sm btnCancelOrder">
                                                    Hủy đơn
                                                </button>
                                                break;

                                            case OrderStatusEnum.DangGiaoHang:
                                                <button data-orderId="@order.ID" data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.DaGiaoHang"
                                                        class="btn btn-success btn-sm btnConfirmOrder me-2">
                                                    Đã giao hàng
                                                </button>
                                                <button data-orderId="@order.ID" data-userId="@order.UserId"
                                                        data-status="@OrderStatusEnum.DaHuy"
                                                        class="btn btn-outline-danger btn-sm btnCancelOrder">
                                                    Hủy đơn
                                                </button>
                                                break;

                                            default:
                                                if (order.Status != OrderStatusEnum.DaGiaoHang &&
                                                order.Status != OrderStatusEnum.DaHuy &&
                                                order.Status != OrderStatusEnum.XacNhanDonHang)
                                                {
                                                    <button data-orderId="@order.ID"
                                                            data-userId="@order.UserId"
                                                            data-status="@OrderStatusEnum.DangGiaoHang"
                                                            class="btn btn-primary btn-sm btnShippingOrder">
                                                        Giao hàng
                                                    </button>
                                                }
                                                break;
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>

<div>
    @{
        Func<int?, string> generateUrl = (int? _pageNumber) =>
        {
            return Url.ActionLink("Index", null, new { page = _pageNumber });
        };

        var dataPaging = new PagingModel(ViewBag.PageNumber, ViewBag.TotalPages, generateUrl);
    }

    <div class="d-flex justify-content-between align-items-center">
        <div>Hiển thị @ViewBag.PageNumber trong tổng số @ViewBag.TotalPages trang</div>
        <partial name="_Paging" model="@dataPaging" />
    </div>
</div>

@section Scripts {
    <script src="/Views/Order/Index.cshtml.js"></script>
}