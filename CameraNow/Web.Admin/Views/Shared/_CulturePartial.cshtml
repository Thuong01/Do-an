@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions    
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedUICultures
                            .Select(c => new SelectListItem { Value = c.Name, Text = localizer.GetString(c.Name) })
                            .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}

<div title="@localizer["Request culture provider: "] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" 
          asp-controller="Culture" 
          asp-action="SetCulture"
          asp-route-returnUrl="@returnUrl" 
          method="post" 
          class="form-horizontal me-4 nav-link text-dark" 
          role="form">
        <select name="culture" onchange="this.form.submit();"
                asp-for="@requestCulture.RequestCulture.UICulture.Name"
                asp-items="cultureItems" class="form-select"></select>
    </form>
</div>
